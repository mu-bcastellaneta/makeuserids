#!/bin/bash

# Chris Del Fattore

inputfile=$1

# 1. Create firstn from $inputfile
cut -b1  p4names.txt | tr [A-Z] [a-z] > firstn


# 2. Create lastn from $inputfile with all special characters removed

cut -d, -f1  p4names.txt | tr "[A-Z]" "[a-z]" | sed 's/-//g' | sed "s/'//g" | cut -c-7 > lastn


# 3. Create first draft userids file from firstn and lastn > ids.1st'.
#    It contains userids in this format:

paste firstn lastn | sed 's/\t//g' > ids.1st

# 4. Create list of the duplicated ids in ids.1st > duplids'.
#    We'll use duplids as a lookup table.  A portion of duplids is
#    shown below:

uniq -D ids.1st > duplids

# 5. Append userids from ids.1st to ids.2nd.
#    If a userid is duplicated, attach appropriate numbers to them
#    and append to ids.2nd.
#
#    Here, grep is your friend. But, be sure to do WHOLE WORD grep.
#
#    For each userid in ids.1st,
#       grep for the userid in duplids from Step 4.
#
#       If grep didn't find the userid in duplids, it's unique, so
#           just append it straightaway to ids.2nd
#
#       Else, (if grep did find the userid in duplids)
#           attach a number to the userid starting at number=1, making
#           sure the userid remains no more than 8 chars.
#
#           grep for the numbered userid in ids.2nd.
#
#           If grep finds that the numbered userid is already in
#           ids.2nd, increment the number by 1, and grep for the new
#           numbered userid in ids.2nd.  REPEAT until grep does not
#           find the numbered userid in ids.2nd.
#
#           Append the numbered userid to ids.2nd.
#

